/* This file was generated by SableCC (http://www.sablecc.org/). */

package quase.lexer;

import java.io.*;
import quase.node.*;

@SuppressWarnings("nls")
public class Lexer
{
    protected Token token;
    protected State state = State.INITIAL;

    private IPushbackReader in;
    private int line;
    private int pos;
    private boolean cr;
    private boolean eof;
    private final StringBuffer text = new StringBuffer();

    @SuppressWarnings("unused")
    protected void filter() throws LexerException, IOException
    {
        // Do nothing
    }

    public Lexer(@SuppressWarnings("hiding") final PushbackReader in)
    {
        this.in = new IPushbackReader() {

            private PushbackReader pushbackReader = in;
            
            @Override
            public void unread(int c) throws IOException {
                pushbackReader.unread(c);
            }
            
            @Override
            public int read() throws IOException {
                return pushbackReader.read();
            }
        };
    }
 
    public Lexer(@SuppressWarnings("hiding") IPushbackReader in)
    {
        this.in = in;
    }
 
    public Token peek() throws LexerException, IOException
    {
        while(this.token == null)
        {
            this.token = getToken();
            filter();
        }

        return this.token;
    }

    public Token next() throws LexerException, IOException
    {
        while(this.token == null)
        {
            this.token = getToken();
            filter();
        }

        Token result = this.token;
        this.token = null;
        return result;
    }

    protected Token getToken() throws IOException, LexerException
    {
        int dfa_state = 0;

        int start_pos = this.pos;
        int start_line = this.line;

        int accept_state = -1;
        int accept_token = -1;
        int accept_length = -1;
        int accept_pos = -1;
        int accept_line = -1;

        @SuppressWarnings("hiding") int[][][] gotoTable = Lexer.gotoTable[this.state.id()];
        @SuppressWarnings("hiding") int[] accept = Lexer.accept[this.state.id()];
        this.text.setLength(0);

        while(true)
        {
            int c = getChar();

            if(c != -1)
            {
                switch(c)
                {
                case 10:
                    if(this.cr)
                    {
                        this.cr = false;
                    }
                    else
                    {
                        this.line++;
                        this.pos = 0;
                    }
                    break;
                case 13:
                    this.line++;
                    this.pos = 0;
                    this.cr = true;
                    break;
                default:
                    this.pos++;
                    this.cr = false;
                    break;
                }

                this.text.append((char) c);

                do
                {
                    int oldState = (dfa_state < -1) ? (-2 -dfa_state) : dfa_state;

                    dfa_state = -1;

                    int[][] tmp1 =  gotoTable[oldState];
                    int low = 0;
                    int high = tmp1.length - 1;

                    while(low <= high)
                    {
                        // int middle = (low + high) / 2;
                        int middle = (low + high) >>> 1;
                        int[] tmp2 = tmp1[middle];

                        if(c < tmp2[0])
                        {
                            high = middle - 1;
                        }
                        else if(c > tmp2[1])
                        {
                            low = middle + 1;
                        }
                        else
                        {
                            dfa_state = tmp2[2];
                            break;
                        }
                    }
                }while(dfa_state < -1);
            }
            else
            {
                dfa_state = -1;
            }

            if(dfa_state >= 0)
            {
                if(accept[dfa_state] != -1)
                {
                    accept_state = dfa_state;
                    accept_token = accept[dfa_state];
                    accept_length = this.text.length();
                    accept_pos = this.pos;
                    accept_line = this.line;
                }
            }
            else
            {
                if(accept_state != -1)
                {
                    switch(accept_token)
                    {
                    case 0:
                        {
                            @SuppressWarnings("hiding") Token token = new0(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 1:
                        {
                            @SuppressWarnings("hiding") Token token = new1(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 2:
                        {
                            @SuppressWarnings("hiding") Token token = new2(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 3:
                        {
                            @SuppressWarnings("hiding") Token token = new3(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 4:
                        {
                            @SuppressWarnings("hiding") Token token = new4(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 5:
                        {
                            @SuppressWarnings("hiding") Token token = new5(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 6:
                        {
                            @SuppressWarnings("hiding") Token token = new6(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 7:
                        {
                            @SuppressWarnings("hiding") Token token = new7(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 8:
                        {
                            @SuppressWarnings("hiding") Token token = new8(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 9:
                        {
                            @SuppressWarnings("hiding") Token token = new9(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 10:
                        {
                            @SuppressWarnings("hiding") Token token = new10(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 11:
                        {
                            @SuppressWarnings("hiding") Token token = new11(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 12:
                        {
                            @SuppressWarnings("hiding") Token token = new12(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 13:
                        {
                            @SuppressWarnings("hiding") Token token = new13(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 14:
                        {
                            @SuppressWarnings("hiding") Token token = new14(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 15:
                        {
                            @SuppressWarnings("hiding") Token token = new15(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 16:
                        {
                            @SuppressWarnings("hiding") Token token = new16(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 17:
                        {
                            @SuppressWarnings("hiding") Token token = new17(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 18:
                        {
                            @SuppressWarnings("hiding") Token token = new18(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 19:
                        {
                            @SuppressWarnings("hiding") Token token = new19(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 20:
                        {
                            @SuppressWarnings("hiding") Token token = new20(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 21:
                        {
                            @SuppressWarnings("hiding") Token token = new21(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 22:
                        {
                            @SuppressWarnings("hiding") Token token = new22(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 23:
                        {
                            @SuppressWarnings("hiding") Token token = new23(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 24:
                        {
                            @SuppressWarnings("hiding") Token token = new24(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 25:
                        {
                            @SuppressWarnings("hiding") Token token = new25(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 26:
                        {
                            @SuppressWarnings("hiding") Token token = new26(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 27:
                        {
                            @SuppressWarnings("hiding") Token token = new27(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 28:
                        {
                            @SuppressWarnings("hiding") Token token = new28(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 29:
                        {
                            @SuppressWarnings("hiding") Token token = new29(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 30:
                        {
                            @SuppressWarnings("hiding") Token token = new30(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 31:
                        {
                            @SuppressWarnings("hiding") Token token = new31(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 32:
                        {
                            @SuppressWarnings("hiding") Token token = new32(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 33:
                        {
                            @SuppressWarnings("hiding") Token token = new33(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 34:
                        {
                            @SuppressWarnings("hiding") Token token = new34(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 35:
                        {
                            @SuppressWarnings("hiding") Token token = new35(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 36:
                        {
                            @SuppressWarnings("hiding") Token token = new36(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 37:
                        {
                            @SuppressWarnings("hiding") Token token = new37(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 38:
                        {
                            @SuppressWarnings("hiding") Token token = new38(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 39:
                        {
                            @SuppressWarnings("hiding") Token token = new39(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 40:
                        {
                            @SuppressWarnings("hiding") Token token = new40(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 41:
                        {
                            @SuppressWarnings("hiding") Token token = new41(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 42:
                        {
                            @SuppressWarnings("hiding") Token token = new42(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    }
                }
                else
                {
                    if(this.text.length() > 0)
                    {
                        throw new LexerException(
                            new InvalidToken(this.text.substring(0, 1), start_line + 1, start_pos + 1),
                            "[" + (start_line + 1) + "," + (start_pos + 1) + "]" +
                            " Unknown token: " + this.text);
                    }

                    @SuppressWarnings("hiding") EOF token = new EOF(
                        start_line + 1,
                        start_pos + 1);
                    return token;
                }
            }
        }
    }

    Token new0(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TEComercial(line, pos); }
    Token new1(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TPontoVirg(line, pos); }
    Token new2(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TClasse(line, pos); }
    Token new3(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TFilhaClasse(line, pos); }
    Token new4(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TComeca(line, pos); }
    Token new5(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TTermina(line, pos); }
    Token new6(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TObj(line, pos); }
    Token new7(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TVirg(line, pos); }
    Token new8(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TVar(line, pos); }
    Token new9(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TCons(line, pos); }
    Token new10(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TAtr(line, pos); }
    Token new11(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TIntTipo(line, pos); }
    Token new12(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TBoolTipo(line, pos); }
    Token new13(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TRealTipo(line, pos); }
    Token new14(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TDetProcInicial(line, pos); }
    Token new15(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TProc(line, pos); }
    Token new16(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TParEsq(line, pos); }
    Token new17(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TParDir(line, pos); }
    Token new18(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TFunc(line, pos); }
    Token new19(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TSe(line, pos); }
    Token new20(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TSenao(line, pos); }
    Token new21(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TEnquanto(line, pos); }
    Token new22(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TIgualSimples(line, pos); }
    Token new23(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TPonto(line, pos); }
    Token new24(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TBoolVerdadeiro(line, pos); }
    Token new25(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TBoolFalso(line, pos); }
    Token new26(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TSubt(line, pos); }
    Token new27(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TEntao(line, pos); }
    Token new28(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TAdc(line, pos); }
    Token new29(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TMult(line, pos); }
    Token new30(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TDiv(line, pos); }
    Token new31(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TMod(line, pos); }
    Token new32(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TIgualComp(line, pos); }
    Token new33(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TMenor(line, pos); }
    Token new34(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TNao(line, pos); }
    Token new35(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TELogico(line, pos); }
    Token new36(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TOuLogico(line, pos); }
    Token new37(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TComentario(text, line, pos); }
    Token new38(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TId(text, line, pos); }
    Token new39(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TCid(text, line, pos); }
    Token new40(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TVazio(text, line, pos); }
    Token new41(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TNumInteiro(text, line, pos); }
    Token new42(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TNumReal(text, line, pos); }

    private int getChar() throws IOException
    {
        if(this.eof)
        {
            return -1;
        }

        int result = this.in.read();

        if(result == -1)
        {
            this.eof = true;
        }

        return result;
    }

    private void pushBack(int acceptLength) throws IOException
    {
        int length = this.text.length();
        for(int i = length - 1; i >= acceptLength; i--)
        {
            this.eof = false;

            this.in.unread(this.text.charAt(i));
        }
    }

    protected void unread(@SuppressWarnings("hiding") Token token) throws IOException
    {
        @SuppressWarnings("hiding") String text = token.getText();
        int length = text.length();

        for(int i = length - 1; i >= 0; i--)
        {
            this.eof = false;

            this.in.unread(text.charAt(i));
        }

        this.pos = token.getPos() - 1;
        this.line = token.getLine() - 1;
    }

    private String getText(int acceptLength)
    {
        StringBuffer s = new StringBuffer(acceptLength);
        for(int i = 0; i < acceptLength; i++)
        {
            s.append(this.text.charAt(i));
        }

        return s.toString();
    }

    private static int[][][][] gotoTable;
/*  {
        { // INITIAL
            {{10, 10, 1}, {13, 13, 2}, {32, 32, 3}, {33, 33, 4}, {37, 37, 5}, {38, 38, 6}, {40, 40, 7}, {41, 41, 8}, {42, 42, 9}, {43, 43, 10}, {44, 44, 11}, {45, 45, 12}, {46, 46, 13}, {47, 47, 14}, {48, 48, 15}, {49, 57, 16}, {58, 58, 17}, {59, 59, 18}, {60, 60, 19}, {61, 61, 20}, {65, 90, 21}, {95, 95, 22}, {97, 97, 23}, {98, 98, 24}, {99, 99, 25}, {100, 100, 23}, {101, 101, 26}, {102, 102, 27}, {103, 104, 23}, {105, 105, 28}, {106, 110, 23}, {111, 111, 29}, {112, 112, 30}, {113, 113, 23}, {114, 114, 31}, {115, 115, 32}, {116, 116, 33}, {117, 117, 23}, {118, 118, 34}, {119, 122, 23}, {123, 123, 35}, {192, 192, 36}, {193, 193, 37}, {194, 194, 38}, {195, 195, 39}, {196, 198, 38}, {199, 199, 40}, {200, 212, 38}, {213, 213, 41}, {214, 217, 38}, {218, 218, 42}, {219, 219, 43}, {224, 224, 44}, {225, 225, 45}, {226, 226, 46}, {227, 227, 47}, {228, 230, 46}, {231, 231, 48}, {232, 244, 46}, {245, 245, 49}, {246, 249, 46}, {250, 250, 50}, {251, 251, 51}, },
            {{10, 32, -2}, },
            {{10, 32, -2}, },
            {{10, 32, -2}, },
            {},
            {},
            {},
            {},
            {},
            {},
            {},
            {},
            {},
            {},
            {},
            {{46, 46, 52}, {48, 57, 16}, {69, 69, 53}, {98, 98, 54}, {101, 101, 55}, },
            {{46, 69, -17}, {101, 101, 55}, },
            {{61, 61, 56}, },
            {},
            {},
            {{61, 61, 57}, {62, 62, 58}, },
            {{65, 90, 59}, {95, 95, 60}, {97, 122, 61}, {192, 192, 62}, {193, 193, 63}, {194, 194, 64}, {195, 195, 65}, {196, 198, 64}, {199, 199, 66}, {200, 212, 64}, {213, 213, 67}, {214, 217, 64}, {218, 218, 68}, {219, 219, 69}, {224, 224, 70}, {225, 225, 71}, {226, 226, 72}, {227, 227, 73}, {228, 230, 72}, {231, 231, 74}, {232, 244, 72}, {245, 245, 75}, {246, 249, 72}, {250, 250, 76}, {251, 251, 77}, },
            {{65, 90, 78}, {95, 95, 79}, {97, 122, 80}, {192, 192, 81}, {193, 193, 82}, {194, 194, 83}, {195, 195, 84}, {196, 198, 83}, {199, 199, 85}, {200, 212, 83}, {213, 213, 86}, {214, 217, 83}, {218, 218, 87}, {219, 219, 88}, {224, 224, 89}, {225, 225, 90}, {226, 226, 91}, {227, 227, 92}, {228, 230, 91}, {231, 231, 93}, {232, 244, 91}, {245, 245, 94}, {246, 249, 91}, {250, 250, 95}, {251, 251, 96}, },
            {{65, 251, -23}, },
            {{65, 95, -23}, {97, 110, 61}, {111, 111, 97}, {112, 122, 61}, {192, 251, -23}, },
            {{65, 95, -23}, {97, 107, 61}, {108, 108, 98}, {109, 110, 61}, {111, 111, 99}, {112, 251, -26}, },
            {{65, 95, -23}, {97, 109, 61}, {110, 110, 100}, {111, 122, 61}, {192, 251, -23}, },
            {{65, 95, -23}, {97, 97, 101}, {98, 104, 61}, {105, 105, 102}, {106, 116, 61}, {117, 117, 103}, {118, 122, 61}, {192, 251, -23}, },
            {{65, 109, -28}, {110, 110, 104}, {111, 251, -28}, },
            {{65, 95, -23}, {97, 97, 61}, {98, 98, 105}, {99, 116, 61}, {117, 117, 106}, {118, 251, -29}, },
            {{65, 95, -23}, {97, 113, 61}, {114, 114, 107}, {115, 122, 61}, {192, 251, -23}, },
            {{65, 95, -23}, {97, 100, 61}, {101, 101, 108}, {102, 122, 61}, {192, 251, -23}, },
            {{65, 100, -33}, {101, 101, 109}, {102, 251, -33}, },
            {{65, 100, -33}, {101, 101, 110}, {102, 113, 61}, {114, 114, 111}, {115, 251, -32}, },
            {{65, 95, -23}, {97, 97, 112}, {98, 122, 61}, {192, 251, -23}, },
            {{0, 122, 113}, {124, 124, 113}, {125, 125, 114}, {126, 65535, 113}, },
            {{65, 251, -23}, },
            {{65, 251, -23}, },
            {{65, 251, -23}, },
            {{65, 251, -23}, },
            {{65, 251, -23}, },
            {{65, 251, -23}, },
            {{65, 251, -23}, },
            {{65, 251, -23}, },
            {{65, 251, -23}, },
            {{65, 251, -23}, },
            {{65, 251, -23}, },
            {{65, 251, -23}, },
            {{65, 251, -23}, },
            {{65, 251, -23}, },
            {{65, 251, -23}, },
            {{65, 251, -23}, },
            {{48, 57, 115}, },
            {{45, 45, 116}, {48, 57, 117}, },
            {{48, 48, 118}, {49, 49, 119}, },
            {{45, 57, -55}, },
            {},
            {},
            {},
            {{65, 251, -23}, },
            {{65, 251, -23}, },
            {{65, 251, -23}, },
            {{65, 251, -23}, },
            {{65, 251, -23}, },
            {{65, 251, -23}, },
            {{65, 251, -23}, },
            {{65, 251, -23}, },
            {{65, 251, -23}, },
            {{65, 251, -23}, },
            {{65, 251, -23}, },
            {{65, 251, -23}, },
            {{65, 251, -23}, },
            {{65, 251, -23}, },
            {{65, 251, -23}, },
            {{65, 251, -23}, },
            {{65, 251, -23}, },
            {{65, 251, -23}, },
            {{65, 251, -23}, },
            {{65, 251, -24}, },
            {{65, 251, -24}, },
            {{65, 251, -24}, },
            {{65, 251, -24}, },
            {{65, 251, -24}, },
            {{65, 251, -24}, },
            {{65, 251, -24}, },
            {{65, 251, -24}, },
            {{65, 251, -24}, },
            {{65, 251, -24}, },
            {{65, 251, -24}, },
            {{65, 251, -24}, },
            {{65, 251, -24}, },
            {{65, 251, -24}, },
            {{65, 251, -24}, },
            {{65, 251, -24}, },
            {{65, 251, -24}, },
            {{65, 251, -24}, },
            {{65, 251, -24}, },
            {{65, 110, -26}, {111, 111, 120}, {112, 251, -26}, },
            {{65, 95, -23}, {97, 97, 121}, {98, 251, -36}, },
            {{65, 95, -23}, {97, 108, 61}, {109, 109, 122}, {110, 110, 123}, {111, 251, -28}, },
            {{65, 95, -23}, {97, 112, 61}, {113, 113, 124}, {114, 115, 61}, {116, 116, 125}, {117, 122, 61}, {192, 251, -23}, },
            {{65, 107, -27}, {108, 108, 126}, {109, 122, 61}, {192, 251, -23}, },
            {{65, 107, -27}, {108, 108, 127}, {109, 251, -103}, },
            {{65, 109, -28}, {110, 110, 128}, {111, 251, -28}, },
            {{65, 95, -23}, {97, 115, 61}, {116, 116, 129}, {117, 251, -102}, },
            {{65, 95, -23}, {97, 105, 61}, {106, 106, 130}, {107, 122, 61}, {192, 251, -23}, },
            {{65, 251, -23}, },
            {{65, 110, -26}, {111, 111, 131}, {112, 251, -26}, },
            {{65, 95, -23}, {97, 97, 132}, {98, 251, -36}, },
            {{65, 109, -28}, {110, 110, 133}, {111, 251, -28}, },
            {{65, 113, -32}, {114, 114, 134}, {115, 251, -32}, },
            {{65, 95, -23}, {97, 116, 61}, {117, 117, 135}, {118, 251, -29}, },
            {{65, 113, -32}, {114, 114, 136}, {115, 251, -32}, },
            {{0, 65535, -37}, },
            {},
            {{48, 57, 115}, },
            {{48, 57, 137}, },
            {{48, 57, 137}, },
            {{48, 49, -56}, },
            {{48, 49, -56}, },
            {{65, 107, -27}, {108, 108, 138}, {109, 251, -103}, },
            {{65, 95, -23}, {97, 114, 61}, {115, 115, 139}, {116, 122, 61}, {192, 251, -23}, },
            {{65, 100, -33}, {101, 101, 140}, {102, 251, -33}, },
            {{65, 114, -123}, {115, 115, 141}, {116, 251, -123}, },
            {{65, 116, -113}, {117, 117, 142}, {118, 251, -29}, },
            {{65, 226, -23}, {227, 227, 143}, {228, 251, -23}, },
            {{65, 114, -123}, {115, 115, 144}, {116, 251, -123}, },
            {{65, 95, -23}, {97, 103, 61}, {104, 104, 145}, {105, 122, 61}, {192, 251, -23}, },
            {{65, 230, -23}, {231, 231, 146}, {232, 251, -23}, },
            {{65, 251, -23}, },
            {{65, 100, -33}, {101, 101, 147}, {102, 251, -33}, },
            {{65, 95, -23}, {97, 98, 61}, {99, 99, 148}, {100, 122, 61}, {192, 251, -23}, },
            {{65, 107, -27}, {108, 108, 149}, {109, 251, -103}, },
            {{65, 226, -23}, {227, 227, 150}, {228, 251, -23}, },
            {{65, 108, -101}, {109, 109, 151}, {110, 122, 61}, {192, 251, -23}, },
            {{65, 100, -33}, {101, 101, 152}, {102, 251, -33}, },
            {{65, 251, -23}, },
            {{48, 57, 137}, },
            {{65, 251, -23}, },
            {{65, 114, -123}, {115, 115, 153}, {116, 251, -123}, },
            {{65, 230, -23}, {231, 231, 154}, {232, 251, -23}, },
            {{65, 251, -23}, },
            {{65, 95, -23}, {97, 97, 155}, {98, 251, -36}, },
            {{65, 110, -26}, {111, 111, 156}, {112, 251, -26}, },
            {{65, 100, -33}, {101, 101, 157}, {102, 251, -33}, },
            {{65, 95, -23}, {97, 97, 158}, {98, 251, -36}, },
            {{65, 226, -23}, {227, 227, 159}, {228, 251, -23}, },
            {{65, 115, -106}, {116, 116, 160}, {117, 251, -102}, },
            {{65, 100, -33}, {101, 101, 161}, {102, 251, -33}, },
            {{65, 251, -23}, },
            {{65, 110, -26}, {111, 111, 162}, {112, 251, -26}, },
            {{65, 95, -23}, {97, 104, 61}, {105, 105, 163}, {106, 122, 61}, {192, 251, -23}, },
            {{65, 251, -23}, },
            {{65, 100, -33}, {101, 101, 164}, {102, 251, -33}, },
            {{65, 95, -23}, {97, 97, 165}, {98, 251, -36}, },
            {{65, 109, -28}, {110, 110, 166}, {111, 251, -28}, },
            {{65, 251, -23}, },
            {{65, 251, -23}, },
            {{32, 32, 167}, {65, 251, -23}, },
            {{65, 110, -26}, {111, 111, 168}, {112, 251, -26}, },
            {{65, 110, -26}, {111, 111, 169}, {112, 251, -26}, },
            {{65, 95, -23}, {97, 99, 61}, {100, 100, 170}, {101, 122, 61}, {192, 251, -23}, },
            {{65, 251, -23}, },
            {{65, 109, -28}, {110, 110, 171}, {111, 251, -28}, },
            {{65, 251, -23}, },
            {{65, 251, -23}, },
            {{65, 115, -106}, {116, 116, 172}, {117, 251, -102}, },
            {{100, 100, 173}, },
            {{65, 251, -23}, },
            {{65, 251, -23}, },
            {{65, 104, -153}, {105, 105, 174}, {106, 251, -153}, },
            {{65, 95, -23}, {97, 97, 175}, {98, 251, -36}, },
            {{65, 110, -26}, {111, 111, 176}, {112, 251, -26}, },
            {{97, 97, 177}, },
            {{65, 108, -101}, {109, 109, 178}, {110, 251, -136}, },
            {{65, 251, -23}, },
            {{65, 251, -23}, },
            {{32, 32, 179}, },
            {{65, 100, -33}, {101, 101, 180}, {102, 251, -33}, },
            {{99, 99, 181}, },
            {{65, 109, -28}, {110, 110, 182}, {111, 251, -28}, },
            {{108, 108, 183}, },
            {{65, 115, -106}, {116, 116, 184}, {117, 251, -102}, },
            {{97, 97, 185}, },
            {{65, 110, -26}, {111, 111, 186}, {112, 251, -26}, },
            {{115, 115, 187}, },
            {{65, 251, -23}, },
            {{115, 115, 188}, },
            {{101, 101, 189}, },
            {},
        }
    };*/

    private static int[][] accept;
/*  {
        // INITIAL
        {-1, 40, 40, 40, 34, 31, 0, 16, 17, 29, 28, 7, 26, 23, 30, 41, 41, -1, 1, 33, 22, 38, 39, 38, 38, 38, 35, 38, 38, 38, 38, 38, 38, 38, 38, -1, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, -1, -1, -1, -1, 10, 32, 14, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 39, 39, 39, 39, 39, 39, 39, 39, 39, 39, 39, 39, 39, 39, 39, 39, 39, 39, 39, 38, 38, 38, 38, 38, 38, 38, 38, 38, 36, 38, 38, 19, 38, 38, 38, -1, 37, 42, 42, 42, 41, 41, 38, 38, 38, 38, 38, 38, 38, 38, 38, 11, 38, 38, 38, 38, 38, 38, 8, 42, 12, 38, 38, 9, 38, 38, 38, 38, 38, 38, 38, 13, 38, 38, 24, 38, 38, 38, 27, 25, 38, 38, 38, 38, 20, 38, 2, 4, 38, -1, 18, 6, 38, 38, 38, -1, 38, 5, 21, -1, 38, -1, 38, -1, 38, -1, 38, -1, 15, -1, -1, 3, },

    };*/

    public static class State
    {
        public final static State INITIAL = new State(0);

        private int id;

        private State(@SuppressWarnings("hiding") int id)
        {
            this.id = id;
        }

        public int id()
        {
            return this.id;
        }
    }

    static 
    {
        try
        {
            DataInputStream s = new DataInputStream(
                new BufferedInputStream(
                Lexer.class.getResourceAsStream("lexer.dat")));

            // read gotoTable
            int length = s.readInt();
            gotoTable = new int[length][][][];
            for(int i = 0; i < gotoTable.length; i++)
            {
                length = s.readInt();
                gotoTable[i] = new int[length][][];
                for(int j = 0; j < gotoTable[i].length; j++)
                {
                    length = s.readInt();
                    gotoTable[i][j] = new int[length][3];
                    for(int k = 0; k < gotoTable[i][j].length; k++)
                    {
                        for(int l = 0; l < 3; l++)
                        {
                            gotoTable[i][j][k][l] = s.readInt();
                        }
                    }
                }
            }

            // read accept
            length = s.readInt();
            accept = new int[length][];
            for(int i = 0; i < accept.length; i++)
            {
                length = s.readInt();
                accept[i] = new int[length];
                for(int j = 0; j < accept[i].length; j++)
                {
                    accept[i][j] = s.readInt();
                }
            }

            s.close();
        }
        catch(Exception e)
        {
            throw new RuntimeException("The file \"lexer.dat\" is either missing or corrupted.");
        }
    }
}
