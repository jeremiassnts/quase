/* This file was generated by SableCC (http://www.sablecc.org/). */

package quase.analysis;

import java.util.*;
import quase.node.*;

public class AnalysisAdapter implements Analysis
{
    private Hashtable<Node,Object> in;
    private Hashtable<Node,Object> out;

    @Override
    public Object getIn(Node node)
    {
        if(this.in == null)
        {
            return null;
        }

        return this.in.get(node);
    }

    @Override
    public void setIn(Node node, Object o)
    {
        if(this.in == null)
        {
            this.in = new Hashtable<Node,Object>(1);
        }

        if(o != null)
        {
            this.in.put(node, o);
        }
        else
        {
            this.in.remove(node);
        }
    }

    @Override
    public Object getOut(Node node)
    {
        if(this.out == null)
        {
            return null;
        }

        return this.out.get(node);
    }

    @Override
    public void setOut(Node node, Object o)
    {
        if(this.out == null)
        {
            this.out = new Hashtable<Node,Object>(1);
        }

        if(o != null)
        {
            this.out.put(node, o);
        }
        else
        {
            this.out.remove(node);
        }
    }

    @Override
    public void caseStart(Start node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAPrograma(APrograma node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAFamiliaFamilia(AFamiliaFamilia node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAVazioFamilia(AVazioFamilia node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAFamiliaAux(AFamiliaAux node)
    {
        defaultCase(node);
    }

    @Override
    public void caseARelacao(ARelacao node)
    {
        defaultCase(node);
    }

    @Override
    public void caseADefClasse(ADefClasse node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAAtributos(AAtributos node)
    {
        defaultCase(node);
    }

    @Override
    public void caseADecObjDecAux(ADecObjDecAux node)
    {
        defaultCase(node);
    }

    @Override
    public void caseADecVarDecAux(ADecVarDecAux node)
    {
        defaultCase(node);
    }

    @Override
    public void caseADecConsDecAux(ADecConsDecAux node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAMetodos(AMetodos node)
    {
        defaultCase(node);
    }

    @Override
    public void caseADecProcedimentoMetodosAux(ADecProcedimentoMetodosAux node)
    {
        defaultCase(node);
    }

    @Override
    public void caseADecFuncaoMetodosAux(ADecFuncaoMetodosAux node)
    {
        defaultCase(node);
    }

    @Override
    public void caseADecObj(ADecObj node)
    {
        defaultCase(node);
    }

    @Override
    public void caseADecVar(ADecVar node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAVirgIdAux(AVirgIdAux node)
    {
        defaultCase(node);
    }

    @Override
    public void caseADecCons(ADecCons node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAVirgInicializacaoAux(AVirgInicializacaoAux node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAInicializacao(AInicializacao node)
    {
        defaultCase(node);
    }

    @Override
    public void caseATipoClasseTipo(ATipoClasseTipo node)
    {
        defaultCase(node);
    }

    @Override
    public void caseATipoPrimitivoTipo(ATipoPrimitivoTipo node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAIntTipoPrimitivo(AIntTipoPrimitivo node)
    {
        defaultCase(node);
    }

    @Override
    public void caseABoolTipoPrimitivo(ABoolTipoPrimitivo node)
    {
        defaultCase(node);
    }

    @Override
    public void caseARealTipoPrimitivo(ARealTipoPrimitivo node)
    {
        defaultCase(node);
    }

    @Override
    public void caseATipoClasse(ATipoClasse node)
    {
        defaultCase(node);
    }

    @Override
    public void caseADecProcedimento(ADecProcedimento node)
    {
        defaultCase(node);
    }

    @Override
    public void caseADecFuncao(ADecFuncao node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAVazioParametros(AVazioParametros node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAParametrosParametros(AParametrosParametros node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAVirgParametroAux(AVirgParametroAux node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAParametro(AParametro node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAIfOnlyComando(AIfOnlyComando node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAIfElseComando(AIfElseComando node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAWhileComando(AWhileComando node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAAtrComando(AAtrComando node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAChamadaComando(AChamadaComando node)
    {
        defaultCase(node);
    }

    @Override
    public void caseABlocoComando(ABlocoComando node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAIdPontoAux(AIdPontoAux node)
    {
        defaultCase(node);
    }

    @Override
    public void caseABloco(ABloco node)
    {
        defaultCase(node);
    }

    @Override
    public void caseARealExp(ARealExp node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAIntExp(AIntExp node)
    {
        defaultCase(node);
    }

    @Override
    public void caseATrueExp(ATrueExp node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAFalseExp(AFalseExp node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAIdExp(AIdExp node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAChamadaExp(AChamadaExp node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAAtributoExp(AAtributoExp node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAParExp(AParExp node)
    {
        defaultCase(node);
    }

    @Override
    public void caseASubtPartExp(ASubtPartExp node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAIfExp(AIfExp node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAAdcExp(AAdcExp node)
    {
        defaultCase(node);
    }

    @Override
    public void caseASubtExp(ASubtExp node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAMultExp(AMultExp node)
    {
        defaultCase(node);
    }

    @Override
    public void caseADivExp(ADivExp node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAModExp(AModExp node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAIgualExp(AIgualExp node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAMenorExp(AMenorExp node)
    {
        defaultCase(node);
    }

    @Override
    public void caseANaoExp(ANaoExp node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAAndExp(AAndExp node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAOrExp(AOrExp node)
    {
        defaultCase(node);
    }

    @Override
    public void caseABlocoExpExp(ABlocoExpExp node)
    {
        defaultCase(node);
    }

    @Override
    public void caseABlocoExp(ABlocoExp node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAChamada(AChamada node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAVazioListaExp(AVazioListaExp node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAListaExpListaExp(AListaExpListaExp node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAVirgExpAux(AVirgExpAux node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTEComercial(TEComercial node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTPontoVirg(TPontoVirg node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTClasse(TClasse node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTFilhaClasse(TFilhaClasse node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTComeca(TComeca node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTTermina(TTermina node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTObj(TObj node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTVirg(TVirg node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTVar(TVar node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTCons(TCons node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTAtr(TAtr node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTIntTipo(TIntTipo node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTBoolTipo(TBoolTipo node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTRealTipo(TRealTipo node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTDetProcInicial(TDetProcInicial node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTProc(TProc node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTParEsq(TParEsq node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTParDir(TParDir node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTFunc(TFunc node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTSe(TSe node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTSenao(TSenao node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTEnquanto(TEnquanto node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTIgualSimples(TIgualSimples node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTPonto(TPonto node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTBoolVerdadeiro(TBoolVerdadeiro node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTBoolFalso(TBoolFalso node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTSubt(TSubt node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTEntao(TEntao node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTAdc(TAdc node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTMult(TMult node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTDiv(TDiv node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTMod(TMod node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTIgualComp(TIgualComp node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTMenor(TMenor node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTNao(TNao node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTELogico(TELogico node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTOuLogico(TOuLogico node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTComentario(TComentario node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTId(TId node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTCid(TCid node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTVazio(TVazio node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTNumInteiro(TNumInteiro node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTNumReal(TNumReal node)
    {
        defaultCase(node);
    }

    @Override
    public void caseEOF(EOF node)
    {
        defaultCase(node);
    }

    @Override
    public void caseInvalidToken(InvalidToken node)
    {
        defaultCase(node);
    }

    public void defaultCase(@SuppressWarnings("unused") Node node)
    {
        // do nothing
    }
}
