/* This file was generated by SableCC (http://www.sablecc.org/). */

package quase.analysis;

import java.util.*;
import quase.node.*;

public class AnalysisAdapter implements Analysis
{
    private Hashtable<Node,Object> in;
    private Hashtable<Node,Object> out;

    @Override
    public Object getIn(Node node)
    {
        if(this.in == null)
        {
            return null;
        }

        return this.in.get(node);
    }

    @Override
    public void setIn(Node node, Object o)
    {
        if(this.in == null)
        {
            this.in = new Hashtable<Node,Object>(1);
        }

        if(o != null)
        {
            this.in.put(node, o);
        }
        else
        {
            this.in.remove(node);
        }
    }

    @Override
    public Object getOut(Node node)
    {
        if(this.out == null)
        {
            return null;
        }

        return this.out.get(node);
    }

    @Override
    public void setOut(Node node, Object o)
    {
        if(this.out == null)
        {
            this.out = new Hashtable<Node,Object>(1);
        }

        if(o != null)
        {
            this.out.put(node, o);
        }
        else
        {
            this.out.remove(node);
        }
    }

    @Override
    public void caseStart(Start node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAExp(AExp node)
    {
        defaultCase(node);
    }

    @Override
    public void caseASubtPartExp(ASubtPartExp node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAAdcExp(AAdcExp node)
    {
        defaultCase(node);
    }

    @Override
    public void caseASubtPartExp1(ASubtPartExp1 node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAAdcExp1(AAdcExp1 node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTEComercial(TEComercial node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTPontoVirg(TPontoVirg node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTClasse(TClasse node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTFilhaClasse(TFilhaClasse node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTComeca(TComeca node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTTermina(TTermina node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTObj(TObj node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTVirg(TVirg node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTVar(TVar node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTCons(TCons node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTAtr(TAtr node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTIntTipo(TIntTipo node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTBoolTipo(TBoolTipo node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTRealTipo(TRealTipo node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTDetProcInicial(TDetProcInicial node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTProc(TProc node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTParEsq(TParEsq node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTParDir(TParDir node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTFunc(TFunc node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTSe(TSe node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTSenao(TSenao node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTEnquanto(TEnquanto node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTIgualSimples(TIgualSimples node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTPonto(TPonto node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTBoolVerdadeiro(TBoolVerdadeiro node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTBoolFalso(TBoolFalso node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTSubt(TSubt node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTEntao(TEntao node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTAdc(TAdc node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTMult(TMult node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTDiv(TDiv node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTMod(TMod node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTIgualComp(TIgualComp node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTMenor(TMenor node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTNao(TNao node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTELogico(TELogico node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTOuLogico(TOuLogico node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTComentario(TComentario node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTId(TId node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTCid(TCid node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTVazio(TVazio node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTNumInteiro(TNumInteiro node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTNumReal(TNumReal node)
    {
        defaultCase(node);
    }

    @Override
    public void caseEOF(EOF node)
    {
        defaultCase(node);
    }

    @Override
    public void caseInvalidToken(InvalidToken node)
    {
        defaultCase(node);
    }

    public void defaultCase(@SuppressWarnings("unused") Node node)
    {
        // do nothing
    }
}
