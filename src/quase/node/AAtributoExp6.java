/* This file was generated by SableCC (http://www.sablecc.org/). */

package quase.node;

import quase.analysis.*;

@SuppressWarnings("nls")
public final class AAtributoExp6 extends PExp6
{
    private PIdPontoAux _idPontoAux_;
    private PAtributo _atributo_;

    public AAtributoExp6()
    {
        // Constructor
    }

    public AAtributoExp6(
        @SuppressWarnings("hiding") PIdPontoAux _idPontoAux_,
        @SuppressWarnings("hiding") PAtributo _atributo_)
    {
        // Constructor
        setIdPontoAux(_idPontoAux_);

        setAtributo(_atributo_);

    }

    @Override
    public Object clone()
    {
        return new AAtributoExp6(
            cloneNode(this._idPontoAux_),
            cloneNode(this._atributo_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAAtributoExp6(this);
    }

    public PIdPontoAux getIdPontoAux()
    {
        return this._idPontoAux_;
    }

    public void setIdPontoAux(PIdPontoAux node)
    {
        if(this._idPontoAux_ != null)
        {
            this._idPontoAux_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._idPontoAux_ = node;
    }

    public PAtributo getAtributo()
    {
        return this._atributo_;
    }

    public void setAtributo(PAtributo node)
    {
        if(this._atributo_ != null)
        {
            this._atributo_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._atributo_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._idPontoAux_)
            + toString(this._atributo_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._idPontoAux_ == child)
        {
            this._idPontoAux_ = null;
            return;
        }

        if(this._atributo_ == child)
        {
            this._atributo_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._idPontoAux_ == oldChild)
        {
            setIdPontoAux((PIdPontoAux) newChild);
            return;
        }

        if(this._atributo_ == oldChild)
        {
            setAtributo((PAtributo) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
