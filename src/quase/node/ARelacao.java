/* This file was generated by SableCC (http://www.sablecc.org/). */

package quase.node;

import quase.analysis.*;

@SuppressWarnings("nls")
public final class ARelacao extends PRelacao
{
    private TClasse _classe_;
    private TCid _cid_;
    private TComeca _comeca_;
    private PAtributos _atributos_;
    private PMetodos _metodos_;
    private TTermina _termina_;

    public ARelacao()
    {
        // Constructor
    }

    public ARelacao(
        @SuppressWarnings("hiding") TClasse _classe_,
        @SuppressWarnings("hiding") TCid _cid_,
        @SuppressWarnings("hiding") TComeca _comeca_,
        @SuppressWarnings("hiding") PAtributos _atributos_,
        @SuppressWarnings("hiding") PMetodos _metodos_,
        @SuppressWarnings("hiding") TTermina _termina_)
    {
        // Constructor
        setClasse(_classe_);

        setCid(_cid_);

        setComeca(_comeca_);

        setAtributos(_atributos_);

        setMetodos(_metodos_);

        setTermina(_termina_);

    }

    @Override
    public Object clone()
    {
        return new ARelacao(
            cloneNode(this._classe_),
            cloneNode(this._cid_),
            cloneNode(this._comeca_),
            cloneNode(this._atributos_),
            cloneNode(this._metodos_),
            cloneNode(this._termina_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseARelacao(this);
    }

    public TClasse getClasse()
    {
        return this._classe_;
    }

    public void setClasse(TClasse node)
    {
        if(this._classe_ != null)
        {
            this._classe_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._classe_ = node;
    }

    public TCid getCid()
    {
        return this._cid_;
    }

    public void setCid(TCid node)
    {
        if(this._cid_ != null)
        {
            this._cid_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._cid_ = node;
    }

    public TComeca getComeca()
    {
        return this._comeca_;
    }

    public void setComeca(TComeca node)
    {
        if(this._comeca_ != null)
        {
            this._comeca_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._comeca_ = node;
    }

    public PAtributos getAtributos()
    {
        return this._atributos_;
    }

    public void setAtributos(PAtributos node)
    {
        if(this._atributos_ != null)
        {
            this._atributos_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._atributos_ = node;
    }

    public PMetodos getMetodos()
    {
        return this._metodos_;
    }

    public void setMetodos(PMetodos node)
    {
        if(this._metodos_ != null)
        {
            this._metodos_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._metodos_ = node;
    }

    public TTermina getTermina()
    {
        return this._termina_;
    }

    public void setTermina(TTermina node)
    {
        if(this._termina_ != null)
        {
            this._termina_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._termina_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._classe_)
            + toString(this._cid_)
            + toString(this._comeca_)
            + toString(this._atributos_)
            + toString(this._metodos_)
            + toString(this._termina_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._classe_ == child)
        {
            this._classe_ = null;
            return;
        }

        if(this._cid_ == child)
        {
            this._cid_ = null;
            return;
        }

        if(this._comeca_ == child)
        {
            this._comeca_ = null;
            return;
        }

        if(this._atributos_ == child)
        {
            this._atributos_ = null;
            return;
        }

        if(this._metodos_ == child)
        {
            this._metodos_ = null;
            return;
        }

        if(this._termina_ == child)
        {
            this._termina_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._classe_ == oldChild)
        {
            setClasse((TClasse) newChild);
            return;
        }

        if(this._cid_ == oldChild)
        {
            setCid((TCid) newChild);
            return;
        }

        if(this._comeca_ == oldChild)
        {
            setComeca((TComeca) newChild);
            return;
        }

        if(this._atributos_ == oldChild)
        {
            setAtributos((PAtributos) newChild);
            return;
        }

        if(this._metodos_ == oldChild)
        {
            setMetodos((PMetodos) newChild);
            return;
        }

        if(this._termina_ == oldChild)
        {
            setTermina((TTermina) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
