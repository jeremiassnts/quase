/* This file was generated by SableCC (http://www.sablecc.org/). */

package quase.node;

import quase.analysis.*;

@SuppressWarnings("nls")
public final class AOrExp4 extends PExp4
{
    private PExp4 _left_;
    private TOuLogico _ouLogico_;
    private PExp5 _right_;

    public AOrExp4()
    {
        // Constructor
    }

    public AOrExp4(
        @SuppressWarnings("hiding") PExp4 _left_,
        @SuppressWarnings("hiding") TOuLogico _ouLogico_,
        @SuppressWarnings("hiding") PExp5 _right_)
    {
        // Constructor
        setLeft(_left_);

        setOuLogico(_ouLogico_);

        setRight(_right_);

    }

    @Override
    public Object clone()
    {
        return new AOrExp4(
            cloneNode(this._left_),
            cloneNode(this._ouLogico_),
            cloneNode(this._right_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAOrExp4(this);
    }

    public PExp4 getLeft()
    {
        return this._left_;
    }

    public void setLeft(PExp4 node)
    {
        if(this._left_ != null)
        {
            this._left_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._left_ = node;
    }

    public TOuLogico getOuLogico()
    {
        return this._ouLogico_;
    }

    public void setOuLogico(TOuLogico node)
    {
        if(this._ouLogico_ != null)
        {
            this._ouLogico_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._ouLogico_ = node;
    }

    public PExp5 getRight()
    {
        return this._right_;
    }

    public void setRight(PExp5 node)
    {
        if(this._right_ != null)
        {
            this._right_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._right_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._left_)
            + toString(this._ouLogico_)
            + toString(this._right_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._left_ == child)
        {
            this._left_ = null;
            return;
        }

        if(this._ouLogico_ == child)
        {
            this._ouLogico_ = null;
            return;
        }

        if(this._right_ == child)
        {
            this._right_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._left_ == oldChild)
        {
            setLeft((PExp4) newChild);
            return;
        }

        if(this._ouLogico_ == oldChild)
        {
            setOuLogico((TOuLogico) newChild);
            return;
        }

        if(this._right_ == oldChild)
        {
            setRight((PExp5) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
