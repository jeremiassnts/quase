/* This file was generated by SableCC (http://www.sablecc.org/). */

package quase.node;

import java.util.*;
import quase.analysis.*;

@SuppressWarnings("nls")
public final class ADecCons extends PDecCons
{
    private TCons _cons_;
    private PTipoPrimitivo _tipoPrimitivo_;
    private PInicializacao _inicializacao_;
    private final LinkedList<PVirgInicializacaoAux> _virgInicializacaoAux_ = new LinkedList<PVirgInicializacaoAux>();
    private TPontoVirg _pontoVirg_;

    public ADecCons()
    {
        // Constructor
    }

    public ADecCons(
        @SuppressWarnings("hiding") TCons _cons_,
        @SuppressWarnings("hiding") PTipoPrimitivo _tipoPrimitivo_,
        @SuppressWarnings("hiding") PInicializacao _inicializacao_,
        @SuppressWarnings("hiding") List<?> _virgInicializacaoAux_,
        @SuppressWarnings("hiding") TPontoVirg _pontoVirg_)
    {
        // Constructor
        setCons(_cons_);

        setTipoPrimitivo(_tipoPrimitivo_);

        setInicializacao(_inicializacao_);

        setVirgInicializacaoAux(_virgInicializacaoAux_);

        setPontoVirg(_pontoVirg_);

    }

    @Override
    public Object clone()
    {
        return new ADecCons(
            cloneNode(this._cons_),
            cloneNode(this._tipoPrimitivo_),
            cloneNode(this._inicializacao_),
            cloneList(this._virgInicializacaoAux_),
            cloneNode(this._pontoVirg_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseADecCons(this);
    }

    public TCons getCons()
    {
        return this._cons_;
    }

    public void setCons(TCons node)
    {
        if(this._cons_ != null)
        {
            this._cons_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._cons_ = node;
    }

    public PTipoPrimitivo getTipoPrimitivo()
    {
        return this._tipoPrimitivo_;
    }

    public void setTipoPrimitivo(PTipoPrimitivo node)
    {
        if(this._tipoPrimitivo_ != null)
        {
            this._tipoPrimitivo_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._tipoPrimitivo_ = node;
    }

    public PInicializacao getInicializacao()
    {
        return this._inicializacao_;
    }

    public void setInicializacao(PInicializacao node)
    {
        if(this._inicializacao_ != null)
        {
            this._inicializacao_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._inicializacao_ = node;
    }

    public LinkedList<PVirgInicializacaoAux> getVirgInicializacaoAux()
    {
        return this._virgInicializacaoAux_;
    }

    public void setVirgInicializacaoAux(List<?> list)
    {
        for(PVirgInicializacaoAux e : this._virgInicializacaoAux_)
        {
            e.parent(null);
        }
        this._virgInicializacaoAux_.clear();

        for(Object obj_e : list)
        {
            PVirgInicializacaoAux e = (PVirgInicializacaoAux) obj_e;
            if(e.parent() != null)
            {
                e.parent().removeChild(e);
            }

            e.parent(this);
            this._virgInicializacaoAux_.add(e);
        }
    }

    public TPontoVirg getPontoVirg()
    {
        return this._pontoVirg_;
    }

    public void setPontoVirg(TPontoVirg node)
    {
        if(this._pontoVirg_ != null)
        {
            this._pontoVirg_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._pontoVirg_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._cons_)
            + toString(this._tipoPrimitivo_)
            + toString(this._inicializacao_)
            + toString(this._virgInicializacaoAux_)
            + toString(this._pontoVirg_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._cons_ == child)
        {
            this._cons_ = null;
            return;
        }

        if(this._tipoPrimitivo_ == child)
        {
            this._tipoPrimitivo_ = null;
            return;
        }

        if(this._inicializacao_ == child)
        {
            this._inicializacao_ = null;
            return;
        }

        if(this._virgInicializacaoAux_.remove(child))
        {
            return;
        }

        if(this._pontoVirg_ == child)
        {
            this._pontoVirg_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._cons_ == oldChild)
        {
            setCons((TCons) newChild);
            return;
        }

        if(this._tipoPrimitivo_ == oldChild)
        {
            setTipoPrimitivo((PTipoPrimitivo) newChild);
            return;
        }

        if(this._inicializacao_ == oldChild)
        {
            setInicializacao((PInicializacao) newChild);
            return;
        }

        for(ListIterator<PVirgInicializacaoAux> i = this._virgInicializacaoAux_.listIterator(); i.hasNext();)
        {
            if(i.next() == oldChild)
            {
                if(newChild != null)
                {
                    i.set((PVirgInicializacaoAux) newChild);
                    newChild.parent(this);
                    oldChild.parent(null);
                    return;
                }

                i.remove();
                oldChild.parent(null);
                return;
            }
        }

        if(this._pontoVirg_ == oldChild)
        {
            setPontoVirg((TPontoVirg) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
